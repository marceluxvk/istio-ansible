- hosts: all
  tasks:
    - name: Configuring Kubernetes Repo
      become: yes
      yum_repository:
          name: kubernetes
          description: K8S Official Repository
          baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled: yes
          gpgcheck: yes
          repo_gpgcheck: yes
          gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    - name: Install packages
      become: yes
      yum: pkg={{item}} state=latest allow_downgrade=True
      with_items:
        - net-tools
        - docker
        - kubeadm
        - kubelet
        - kubectl
    - name: Disabling Swap
      become: yes
      command: swapoff -a
    - name: Disabling SELinux
      become: yes
      command: setenforce 0
    - name: Configure Kubernetes Network
      become: yes
      copy:
        dest: /etc/sysctl.d/k8s.conf # required. Remote absolute path where the file should be copied to. If I(src) is a directory, this must be a directory too. If I(dest) is a nonexistent path and if either I(dest) ends with "/" or I(src) is a directory, I(dest) is created. If I(src) and I(dest) are files, the parent directory of I(dest) isn't created: the task fails if it doesn't already exist.
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
    - name: Restarting Sysctl
      become: yes
      command: sysctl --system
    - name: Starting Services
      become: yes
      service:
        name: "{{ item }}"
        enabled: true
        state: started
      with_items:
        - docker
        - kubelet
- hosts: kube1
  tasks:
    - name: Installing Kubernetes Master Node
      become: yes
      shell: |
        kubeadm init --apiserver-advertise-address $(ifconfig eth1|grep netmask|awk '{print $2}') --pod-network-cidr=10.244.0.0/16 | grep 'kubeadm join' > /vagrant/key.txt
        mkdir -p /home/vagrant/.kube
        mkdir -p ~/.kube
        cp -i /etc/kubernetes/admin.conf ~/.kube/config
        cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config  
        chown vagrant:vagrant /home/vagrant/.kube/config  
        kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
        kubectl taint nodes --all node-role.kubernetes.io/master-
        echo "source <(kubectl completion bash)" >> ~/.bashrc
        echo "source <(kubectl completion bash)" >> /home/vagrant/.bashrc
      args:
        creates: /home/vagrant/.kube/config
    - name: Waiting K8S to be Ready
      become: yes
      shell: "/usr/bin/kubectl get nodes"
      register: nodes
      until:      
        - '" Ready "  in nodes.stdout'      
      retries: 20
      delay: 5
    - name: Installing Helm
      become: yes
      shell: |
        curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash
        kubectl create clusterrolebinding add-on-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default   
        kubectl create clusterrolebinding add-on-cluster-adm --clusterrole=cluster-admin --serviceaccount=default:default
        /usr/local/bin/helm init
        /usr/local/bin/helm repo update
        echo "export PATH=\$PATH:/usr/local/bin" >> /etc/profile
      args:
        creates: /usr/local/bin/helm
    - name: Installing Docker Registry
      become: yes
      shell: |
        helm install stable/docker-registry --name registry --set service.clusterIP=10.104.205.15
    - name: Installing Istio
      become: yes
      shell: |
        cd /usr/local
        curl -L https://git.io/getLatestIstio |sh -
        echo "export PATH=\$PATH:/$(pwd)/$(ls -d istio*)/bin" >> /etc/profile
    - name: Installing Golang
      become: yes
      yum: pkg={{item}} state=latest
      with_items:
        - golang
        - git
- hosts: kube2 kube3 kube4 kube5
  tasks:
    - name: Adding note into the K8S Cluster
      become: yes
      command: sh /vagrant/key.txt